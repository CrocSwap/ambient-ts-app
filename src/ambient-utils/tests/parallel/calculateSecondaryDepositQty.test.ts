import { calculateSecondaryDepositQty } from '../../dataLayer/functions/calculateSecondaryDepositQty';

const WBTC_DECIMALS = 8;
const USDC_DECIMALS = 6;
const ETH_DECIMALS = 18;
const ETH_USDC_POOL_PRICE = 580953461.6770911;
const ETH_WBTC_POOL_PRICE = 157556275070.23358;
const USDC_WBTC_POOL_PRICE = 0.003724870738812943;
const TEST_PRECISION = 15;

describe('testing calculateSecondaryDepositQty', () => {
    it.each([
        [
            'Balanced 1 ETH-USDC Mint at ±10% Width',
            ETH_USDC_POOL_PRICE, // poolPriceNonDisplay: number, 'scaled' or 'wei' price of the pool
            6, // tokenADecimals: number,
            18, // tokenBDecimals: number,
            '1', // primaryInputValueStr: string, the token quantity entered by the user
            true, // isTokenAPrimary: boolean,
            false, // isTokenABase: boolean,
            false, // isAmbientPosition: boolean,
            1.038616454647909, // depositSkew?: number,
            0.0006033878246824903, // expected value.
        ],
        [
            'Balanced 100 USDC-ETH Mint at ±10% Width',
            ETH_USDC_POOL_PRICE,
            USDC_DECIMALS,
            ETH_DECIMALS,
            '100',
            true,
            false,
            false,
            1.038616454647909,
            0.060338782468249,
        ],
        [
            'Balanced 0.00001 USDC-ETH Mint at ±10% Width',
            ETH_USDC_POOL_PRICE,
            USDC_DECIMALS,
            ETH_DECIMALS,
            '0.00001',
            true,
            false,
            false,
            1.0093300287442797,
            5.8637377417362725e-9,
        ],
        [
            'Balanced 1000 USDC-ETH Mint at ±52% Width',
            ETH_USDC_POOL_PRICE,
            USDC_DECIMALS,
            ETH_DECIMALS,
            '1000',
            true,
            false,
            false,
            1.0016912625001917,
            0.5819360064811822,
        ],
        [
            'Balanced 1000 USDC-ETH Mint at ±12% Width',
            ETH_USDC_POOL_PRICE,
            USDC_DECIMALS,
            ETH_DECIMALS,
            '1000',
            true,
            false,
            false,
            1.007850691212829,
            0.5855143479137421,
        ],
        [
            'Balanced 1000 USDC-ETH Mint at ±10% Width',
            ETH_USDC_POOL_PRICE,
            ETH_DECIMALS,
            USDC_DECIMALS,
            '1',
            true,
            true,
            false,
            1.0384661373603,
            1657.5487744816794,
        ],
        [
            'Balanced 10 WBTC-ETH Mint at ±10% Width',
            ETH_WBTC_POOL_PRICE,
            WBTC_DECIMALS,
            ETH_DECIMALS,
            '10',
            true,
            false,
            false,
            0.976255942594625,
            153.8152498303889,
        ],
        [
            'Balanced 10 WBTC-ETH Mint at Ambient Width',
            ETH_WBTC_POOL_PRICE,
            WBTC_DECIMALS,
            ETH_DECIMALS,
            '10',
            true,
            false,
            true,
            1,
            157.5562750702336,
        ],
        [
            'Balanced 15.3 WBTC-ETH Mint, non-base token, at ±10% Width',
            ETH_WBTC_POOL_PRICE,
            WBTC_DECIMALS,
            ETH_DECIMALS,
            '15.3',
            false,
            false,
            false,
            0.976255942594625,
            0.9946998114212481,
        ],

        [
            'Balanced 1 ETH-WBTC Mint, non-base token, at ±10% Width',
            ETH_WBTC_POOL_PRICE,
            ETH_DECIMALS,
            WBTC_DECIMALS,
            '1',
            true,
            true,
            true,
            1,
            0.06346938575148668,
        ],
        [
            'Unbalanced 1000 USDC-ETH Mint, at [-46%, +12%] Width',
            ETH_USDC_POOL_PRICE,
            6,
            18,
            '1000',
            true,
            false,
            false,
            0.28913102208717334,
            0.16797166815977885,
        ],
        [
            'Unbalanced 1000 ETH-USDC Mint, at [-3%, +7%] Width',
            ETH_USDC_POOL_PRICE,
            18,
            6,
            '1000',
            true,
            true,
            false,
            2.2668609959948887,
            759335.6082986615,
        ],
        [
            'Unbalanced 1000 USDC-WBTC Mint, at [-22%, +5%] Width',
            USDC_WBTC_POOL_PRICE,
            8,
            6,
            '1000',
            true,
            true,
            false,
            0.24864319098007026,
            107972267.73271404,
        ],
        [
            'Unbalanced 1000 USDC-WBTC Mint, at [-19%, +8%] Width',
            USDC_WBTC_POOL_PRICE,
            6,
            8,
            '1000',
            true,
            false,
            false,
            0.429637409474533,
            0.016003438148510827,
        ],
        [
            'Unbalanced 1000 USDC-WBTC Mint, at [-38%, -113%] Width (Out of Range)',
            USDC_WBTC_POOL_PRICE,
            6,
            8,
            '1000',
            true,
            false,
            false,
            0,
            0,
        ],
        [
            'Unbalanced 1000 ETH-WBTC Mint, at [+4%, +5%] Width (Out of Range)',
            ETH_WBTC_POOL_PRICE,
            18,
            8,
            '1000',
            true,
            true,
            false,
            Infinity,
            0,
        ],
        [
            'Unbalanced 2134142 ETH-USDC Mint, at [+2%, +1.83%] Width (Out of Range)',
            ETH_USDC_POOL_PRICE,
            18,
            6,
            '2134142.95',
            false,
            true,
            false,
            0,
            0,
        ],
    ])(
        'testing case: %s',
        (
            _,
            poolPriceNonDisplay,
            tokenADecimals,
            tokenBDecimals,
            primaryInputValueStr,
            isTokenAPrimary,
            isTokenABase,
            isAmbientPosition,
            depositSkew,
            expected,
        ) => {
            const qtyTokenB =
                calculateSecondaryDepositQty(
                    poolPriceNonDisplay,
                    tokenADecimals,
                    tokenBDecimals,
                    primaryInputValueStr,
                    isTokenAPrimary,
                    isTokenABase,
                    isAmbientPosition,
                    depositSkew,
                ) ?? 0;
            expect(qtyTokenB).toBeDefined();
            expect(qtyTokenB).toBeCloseTo(expected, TEST_PRECISION);
        },
    );
});
