.container,
.content {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.header {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    margin-bottom: 8px;
    gap: 8px;
    width: 100%;
}

.search_and_sort {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    gap: 4px;
}

/* wrapper for search input icon, text field, and 'clear' button */
/* WHY DOES THIS NOT EXPAND TO FULL HEIGHT OF THE PARENT?? */
.text_search_box {
    display: flex;
    flex-direction: row;
    align-items: center;
    width: 100%;
    max-width: 400px;
    gap: 4px;
    background-color: var(--dark2);
}

/* text entry box for search input */
.text_search_box > input {
    width: 100%;
    padding: 0 8px;
    background: transparent;
    color: var(--text1);
    outline: none;
    border: none;
    opacity: 1;
    transition: all var(--animation-speed) ease-in;
    cursor: normal;
    font-size: 12px;
}

.filters {
    display: flex;
    flex-direction: row;
    gap: 8px;
}

.filters > button {
    min-width: 110px;
    height: 25px;
    border: 1px solid var(--dark3);
    background: var(--dark3);
    color: var(--text2);
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    gap: 10px;
    font-size: 12px;
    cursor: pointer;
    outline: none;
}

.filters > button:hover {
    transition: all var(--animation-speed) ease-in-out;
    color: var(--accent1);
    border: 1px solid var(--accent1);
}

/* add border to header buttons when state is active */
.button_on {
    border: 1px solid var(--accent1) !important;
}

/* change color of button contents when state is active */
.button_on * {
    color: var(--accent1);
}

.sort_clickable {
    position: relative;
    width: 220px;
}

.sort_selection {
    display: flex;
    gap: 4px;
}

.timeDropdownButton {
    border-left: 4px solid var(--accent1, #62ebf1);
    background-color: var(--dark2);
    display: flex;
    padding: 4px 4px 4px 8px;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    width: 160px;
    text-transform: uppercase;
}

.timeDropdownButton p {
    font-size: 14px;
    color: var(--accent1);
}

.sort_direction {
    display: flex;
    flex-direction: column;
    align-items: center;
    cursor: pointer;
}

.hi:hover {
    color: var(--accent1);
    opacity: 50%;
}

.dropdown {
    height: auto;
    width: calc(100% - 25px);
    background-color: var(--dark2);
    position: absolute;
    top: 30px;
    overflow-y: scroll;
    padding: 4px;
    z-index: 2;
    display: flex;
    flex-direction: column;
    gap: 4px;
}

.timeItem {
    font-size: 12px;
    color: var(--text1);
    transition: all var(--animation-speed) ease-in-out;
    cursor: pointer;
    padding: 0 4px;
    text-transform: uppercase;
}

.timeItem:hover {
    background: var(--accent3);
}

.tickerItemContainer {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    border-left: 4px solid var(--accent2);
    align-items: center;
    font-size: 18px;
    color: var(--text1);
    transition: all var(--animation-speed) ease-in-out;
    cursor: pointer;
    vertical-align: middle;
    height: 32px;
}

.tickerItemContainer:hover {
    background: var(--dark4);
}

.tickerItemContainer p:first-of-type {
    text-transform: uppercase;
}
/* .tickerItemContainer p:not(:nth-of-type(3)) {
    padding: 0 8px;
} */

.tickerItemContainer p:nth-of-type(3),
.tickerHeader p:nth-of-type(3) ,
.tickerItemContainer p:nth-of-type(4),
.tickerHeader p:nth-of-type(4){
    text-align: end;
}

.ticker_name {
    letter-spacing: 0.5px;
    display: flex;
    flex-direction: row;
    align-items: center;
}

.ticker_name_arrow {
    padding-left: 4px;
    opacity: 0;
    transition: all var(--animation-speed) ease-in-out;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    
}

.tickerItemContainer:hover .ticker_name_arrow{
    opacity: 1;
}

.statusContainer {
    text-align: end;
}

.tickerStatus {
    width: 10px;
    height: 10px;
    border-radius: 50%;
}

/* wrapper for ticker table rows and column headers */
.ticker_table {
    flex-direction: column;
    width: 100%;
    height: 100%;
    display: flex;
    gap: 8px;
    margin: 0 8px;
}

.ticker_table > header {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
    color: var(--text3);
    font-size: 12px;
    /* border-left: 4px solid transparent;
    border-right: 4px solid transparent; */
    background-color: green;
    /* outline: 1px solid green; */
}

.ticker_table > header > * {
    width: 120px;
    flex: 1 10 auto;
}

/* .tickerTableContent {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 4px;
    height: 100%;
    overflow-y: scroll;
    scrollbar-color: var(--dark2) var(--dark2);
    padding-bottom: 1rem;
} */

.scrolling {
    scrollbar-color: var(--accent1) var(--dark2);
}

.active {
    background: #28585d;
}

.hoverActive {
    background: var(--dark4);
}

.marketCap, .timeRemaining {
    text-align: end;
}

/* .marketCapHeader {
    text-align: end;
    padding: 0 12px;
} */

/* differential content when length of data array is zero */
.no_auctions_content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 2rem 0;
    height: 100%;
}

.no_auctions_content > p {
    color: var(--text2);
}

.no_auctions_content > button {
    display: flex;
    padding: 2px 8px;
    justify-content: center;
    align-items: center;
    gap: 10px;
    align-self: stretch;
    outline: none;
    background: var(--accent1, #0ccdff);
    color: var(--dark1);
    transition: all var(--animation-speed) ease-in-out;
    margin: 0 auto;
    text-transform: uppercase;
}

.no_auctions_content > button:hover {
    background: var(--accent2);
}

.container {
    display: flex;
    flex-direction: column;
}

@media (max-width: 500px){
    .tickerItemContainer, .tickerHeader {
        grid-template-columns: 1fr 1fr 50px 60px;
    }
}

@media (min-width: 768px) {
    .container {
        display: grid;
    }

    .mainBorder{
        border: 2px solid var(--borders, #5C6F72);
        padding: 8px;
        height: calc(100% - 8px);
    }

    .tickerTableContainer {
        height: 100%;
        
    }
    .tickerTableContent {
        height: 100%;
    }
}

@media (min-width: 1080px) {
    .mainBorder {
        height: calc(100% - 8px);
    }

}

@media (min-width: 1280px) {
    .content h2 {
        color: var(--text1, #ceffff);
        font-size: 36px;
        text-transform: uppercase;
    }
}

@media (max-width: 968px) {
    .contentContainer {
        height: calc(100vh - 186px) !important;
        justify-content: space-between;
        padding-bottom: 1rem;
    }
}

@media (max-width: 768px) {
    .contentContainer {
        padding-bottom: 0;
    }

    .tickerTableContent {
        margin-bottom: 3rem;
    }
}

/* WHY DOES THE APP BREAK WHEN I REMOVE THIS */
/* IF I TAKE IT OUT THE ENTIRE TABLE DISAPPEARS */
/* IT SHOULD BE REDUNDANT WITH THE FIRST RULE IN THIS FILE */
.container {
    display: flex;
    flex-direction: column;
}


@media (max-width: 400px) {
    .header {
        display: grid;
        grid-template-areas: 
            'top'
            'bottom';
    }

    .search_and_sort {
        grid-area: top;
    }

    .filters {
        grid-area: bottom;
    }
}
