// import { PositionPoolIF } from './PositionPoolIF';
export interface PositionIF {
    chainId: string;
    positionId: string;
    positionStorageSlot: string;
    merkleStorageSlot: string;
    askTick: number;
    bidTick: number;
    id: string;
    isBid: boolean;
    knockout: boolean;
    poolIdx: number;
    base: string;
    baseDecimals: number;
    quoteDecimals: number;
    baseTokenLogoURI: string;
    quoteTokenLogoURI: string;
    quote: string;
    user: string;
    ensResolution: string;
    // userEnsName: string;
    baseSymbol: string;
    quoteSymbol: string;
    poolPriceInTicks: number;
    isPositionInRange: boolean;
    lowRangeDisplayInBase: string;
    lowRangeShortDisplayInBase: string;
    highRangeDisplayInBase: string;
    highRangeShortDisplayInBase: string;
    lowRangeShortDisplayInQuote: string;
    lowRangeDisplayInQuote: string;
    highRangeDisplayInQuote: string;
    highRangeShortDisplayInQuote: string;
    tokenAQtyDisplay: string;
    tokenBQtyDisplay: string;
    baseTokenDecimals: number;
    quoteTokenDecimals: number;
    positionType: string;
    positionLiqBase?: string;
    positionLiqBaseDecimalCorrected?: number;
    positionLiqBaseTruncated?: string;
    positionLiqQuoteTruncated?: string;
    positionLiqQuoteDecimalCorrected?: number;
    positionLiqQuote?: string;
    feesLiqBase?: string;
    feesLiqBaseDecimalCorrected?: number;
    feesLiqQuoteDecimalCorrected?: number;
    feesLiqQuote?: string;
    apy: number;
    time: number;
    latestUpdateTime: number;
    positionLiq: string;
    positionLiqTotalUSD: number;
    totalValueUSD: number;
    bidTickPriceDecimalCorrected: number;
    bidTickInvPriceDecimalCorrected: number;
    askTickPriceDecimalCorrected: number;
    askTickInvPriceDecimalCorrected: number;
}
